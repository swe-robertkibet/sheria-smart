---
deployment:
  tasks:
    # FRONTEND DEPLOYMENT
    - export FRONTEND_DEPLOYPATH=/home2/robertki/sheria.robertkibet.com
    - cd frontend && /usr/local/bin/npm install
    - cd frontend && /usr/local/bin/npm run build

    # Create server.js dynamically (Next.js SSR server)
    - cd frontend && cat > server.js << 'EOF'
      const { createServer } = require('http');
      const next = require('next');

      const dev = process.env.NODE_ENV !== 'production';
      const app = next({ dev });
      const handle = app.getRequestHandler();

      app.prepare().then(() => {
      createServer((req, res) => {
      handle(req, res);
      }).listen(process.env.PORT || 3000, (err) => {
      if (err) throw err;
      console.log(`> Ready on http://localhost:${process.env.PORT || 3000}`);
      });
      });
      EOF

    # Move build output & server.js to deploy path
    - /bin/rsync -av frontend/.next $FRONTEND_DEPLOYPATH
    - /bin/rsync -av frontend/public $FRONTEND_DEPLOYPATH
    - /bin/rsync -av frontend/package.json $FRONTEND_DEPLOYPATH
    - /bin/rsync -av frontend/server.js $FRONTEND_DEPLOYPATH

    # BACKEND DEPLOYMENT
    - export BACKEND_PATH=/home2/robertki/sheria-smart/backend
    - cd backend && /usr/local/bin/npm install
    - cd backend && (/usr/local/bin/npm run build || true)

    # Restart backend (Passenger)
    - mkdir -p $BACKEND_PATH/tmp
    - touch $BACKEND_PATH/tmp/restart.txt
